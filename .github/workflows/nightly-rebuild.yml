---
name: Nightly CI
on:
  push:
    branches:
      - develop
#   schedule:
#     - cron: '0 2 * * *'

jobs:

  generate-packages-matrix:
    name: Get packages matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: set-matrix
        id: set-matrix
        run: |
          cd packages
          matrix=""
          for i in $(ls -d */); do
            matrix="$matrix{\"pkg\":\"${i%%/}\"},"
          done
          matrix="${matrix%,}"
          echo "matrix={\"include\":[${matrix}]}"  >> $GITHUB_OUTPUT

  makepkg:
    name: makepkg
    needs: generate-packages-matrix
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
    strategy:
      matrix: ${{fromJson(needs.generate-packages-matrix.outputs.matrix)}}
    steps:
      - name: Add tester user
        run: |
          useradd -m tester
          echo "tester ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        
      - name: Check out the codebase
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      # - name: Exit if pkg doesn't exist.
      #   run: if [ ! -d "${{ matrix.pkg }}" ]; then exit 1; fi

      # - name: Pull devel image
      #   run: docker pull quay.io/aminvakil/archlinux:devel

      # - name: Run a container of devel image and mount package on it
      #   id: run-container
      #   run: |
      #     container_id=$(docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v "${PWD}/packages/${{ matrix.pkg }}":/pkg quay.io/aminvakil/archlinux:devel)
      #     echo "container_id=$container_id" >> $GITHUB_OUTPUT

      # - name: Execute stuff before makepkg if there is any
      #   run: |
      #     if [ -f ci/"${{ matrix.pkg }}"/before_makepkg.sh ]; then
      #         shellcheck ci/"${{ matrix.pkg }}"/before_makepkg.sh
      #         docker exec -i "$(cat ${container_id})" sh < ci/"${{ matrix.pkg }}"/before_makepkg.sh
      #     fi
      - name: ls
        run: ls

      - name: Upgrade all packages
        run: pacman -Suy --noconfirm

      # - name: Change ownership of package folder
      #   run: "docker exec $(cat ${container_id}) chown -R devel: /pkg"

      - name: Install namcap
        run: pacman -S namcap --noconfirm

      - name: Install Paru
        run: |
          pacman -S git --noconfirm
          mkdir /tmp/paru
          chown -R tester: /tmp/paru
          cd /tmp/paru      
          su tester sh -c "git clone https://aur.archlinux.org/paru-bin.git ."
          su tester sh -c "makepkg -si --noconfirm"     

      - name: Test install package
        run: |
          mkdir /tmp/test
          chown -R tester: /tmp/test
          cd /tmp/test
          git clone https://aur.archlinux.org/${{ matrix.pkg }}.git .
          su tester sh -c "paru -Ui --noconfirm"

      # - name: Execute stuff after makepkg if there is any
      #   run: |
      #     if [ -f ci/"${{ matrix.pkg }}"/after_makepkg.sh ]; then
      #         shellcheck ci/"${{ matrix.pkg }}"/after_makepkg.sh
      #         docker exec -i "$(cat ${container_id})" sh < ci/"${{ matrix.pkg }}"/after_makepkg.sh
      #     fi

